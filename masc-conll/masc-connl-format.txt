1	ID	"Token counter, starting at 1 for each new sentence."	2	FORM	"Word form or punctuation symbol. The FORM field uses the original WSJ tokenization, i.e., hyphenated words such as “Atlanta-based” are not split."	3	LEMMA	"Predicted lemma of FORM, extracted from WordNet using the most common sense of the word. If FORM does not exist in WordNet, LEMMA is set to the lower-case version of FORM."	4	GPOS	(train/dev only)	"Gold part-of-speech (POS) tag from the TreeBank. Note that, in order to have a realistic evaluation, this field is provided only for the training and development sets. For the testing sets this column will contain “_”."5	PPOS	Predicted POS tag. These tags are predicted by a state-of-the-art POS tagger [1]. To avoid overfitting the tagger on the training corpus the tags on the training set are generated through 10-fold cross-validation.	6	SPLIT_FORM	"Tokens split at hyphens and slashes. Because some arguments, generally arguments of nominal predicates, may appear inside hyphenated words it is necessary to split hyphenated constructs in order to correctly annotate such arguments. For example, the TreeBank token “Atlanta-based” is split into three SPLIT_FORMs: “Atlanta”, “-”, and “based”. To ensure the same number of rows for all columns corresponding to one sentence, the FORM, LEMMA, GPOS, and PPOS columns are padded with “_” fields for all split tokens. For details on when to split treebank tokens click here"	7	SPLIT_LEMMA	"Predicted lemma of SPLIT_FORM, extracted from WordNet using the most common sense of the word. If SPLIT_FORM does not exist in WordNet, SPLIT_LEMMA is set to the lower-case version of SPLIT_FORM."	8	PPOSS	Predicted POS tags of the split forms. These tags are generated using the same state-of-the-art tagger and cross-validation process as PPOS.	9	HEAD	"Syntactic head of the current token, which is either a value of ID or zero (’0’). Note that both syntactic and semantic dependencies annotate the split-form tokens."	10	DEPREL	Syntactic dependency relation to the HEAD. The syntactic dependency analysis is very similar to that used for the English data sets in the CoNLL 2007 shared task and is further described here.	11	PRED	Rolesets of the semantic predicates in this sentence. This includes both nominal and verbal predicates. The split-form tokens that are not semantic predicates must be marked with “_”. We use the same roleset names as the PropBank and NomBank frames.	12+	ARG	"Columns with argument labels for the each semantic predicate following textual order, i.e., the first column corresponds to the first predicate in PRED, the second column to the second predicate, etc. Note that, because this algorithm uniquely identifies the ID of the corresponding predicate, it is sufficient to store the label of the argument here. The argument labels for verbal predicates follow the PropBank conventions. Labels of arguments to nominal predicates use NomBank conventions. The differences between PropBank and NomBank labels are discussed here."	